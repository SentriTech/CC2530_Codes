################################################################################
#                                                                              #
#      IAR Universal Linker V4.61L/W32                                         #
#                                                                              #
#           Link time     =  01/Jun/2014  09:47:45                             #
#           Target CPU    =  x51                                               #
#           List file     =  "E:\ZIGBEE\3ÔÂ27ºÅ\5ÔÂ25¿ÉÓÃ\node25¸Ä¶¯ÓÃÓÚÊµÑé ¸ #
#                            Ä¶¯Íê±Ï ³õ\Debug\List\project2.map"               #
#           Output file 1 =  "E:\ZIGBEE\3ÔÂ27ºÅ\5ÔÂ25¿ÉÓÃ\node25¸Ä¶¯ÓÃÓÚÊµÑé ¸ #
#                            Ä¶¯Íê±Ï ³õ\project2.hex"                          #
#                            Format: intel-extended                            #
#           Output file 2 =  "E:\ZIGBEE\3ÔÂ27ºÅ\5ÔÂ25¿ÉÓÃ\node25¸Ä¶¯ÓÃÓÚÊµÑé ¸ #
#                            Ä¶¯Íê±Ï ³õ\project2.d51"                          #
#                            Format: debug                                     #
#                            UBROF version 10.0.2                              #
#                            Using library modules for C-SPY (-rt)             #
#           Command line  =  -ID:\IAR\8051\CONFIG\ -D_NR_OF_BANKS=0            #
#                            -D_CODEBANK_END=0 -D_CODEBANK_START=0             #
#                            "E:\ZIGBEE\3ÔÂ27ºÅ\5ÔÂ25¿ÉÓÃ\node25¸Ä¶¯ÓÃÓÚÊµÑé ¸ #
#                            Ä¶¯Íê±Ï ³õ\Debug\Obj\basic_rf.r51"                #
#                            "E:\ZIGBEE\3ÔÂ27ºÅ\5ÔÂ25¿ÉÓÃ\node25¸Ä¶¯ÓÃÓÚÊµÑé ¸ #
#                            Ä¶¯Íê±Ï ³õ\Debug\Obj\basic_rf_security.r51"       #
#                            "E:\ZIGBEE\3ÔÂ27ºÅ\5ÔÂ25¿ÉÓÃ\node25¸Ä¶¯ÓÃÓÚÊµÑé ¸ #
#                            Ä¶¯Íê±Ï ³õ\Debug\Obj\clock.r51"                   #
#                            "E:\ZIGBEE\3ÔÂ27ºÅ\5ÔÂ25¿ÉÓÃ\node25¸Ä¶¯ÓÃÓÚÊµÑé ¸ #
#                            Ä¶¯Íê±Ï ³õ\Debug\Obj\hal_assert.r51"              #
#                            "E:\ZIGBEE\3ÔÂ27ºÅ\5ÔÂ25¿ÉÓÃ\node25¸Ä¶¯ÓÃÓÚÊµÑé ¸ #
#                            Ä¶¯Íê±Ï ³õ\Debug\Obj\hal_board.r51"               #
#                            "E:\ZIGBEE\3ÔÂ27ºÅ\5ÔÂ25¿ÉÓÃ\node25¸Ä¶¯ÓÃÓÚÊµÑé ¸ #
#                            Ä¶¯Íê±Ï ³õ\Debug\Obj\hal_int.r51"                 #
#                            "E:\ZIGBEE\3ÔÂ27ºÅ\5ÔÂ25¿ÉÓÃ\node25¸Ä¶¯ÓÃÓÚÊµÑé ¸ #
#                            Ä¶¯Íê±Ï ³õ\Debug\Obj\hal_led.r51"                 #
#                            "E:\ZIGBEE\3ÔÂ27ºÅ\5ÔÂ25¿ÉÓÃ\node25¸Ä¶¯ÓÃÓÚÊµÑé ¸ #
#                            Ä¶¯Íê±Ï ³õ\Debug\Obj\hal_mcu.r51"                 #
#                            "E:\ZIGBEE\3ÔÂ27ºÅ\5ÔÂ25¿ÉÓÃ\node25¸Ä¶¯ÓÃÓÚÊµÑé ¸ #
#                            Ä¶¯Íê±Ï ³õ\Debug\Obj\hal_rf.r51"                  #
#                            "E:\ZIGBEE\3ÔÂ27ºÅ\5ÔÂ25¿ÉÓÃ\node25¸Ä¶¯ÓÃÓÚÊµÑé ¸ #
#                            Ä¶¯Íê±Ï ³õ\Debug\Obj\hal_rf_security.r51"         #
#                            "E:\ZIGBEE\3ÔÂ27ºÅ\5ÔÂ25¿ÉÓÃ\node25¸Ä¶¯ÓÃÓÚÊµÑé ¸ #
#                            Ä¶¯Íê±Ï ³õ\Debug\Obj\hal_rf_util.r51"             #
#                            "E:\ZIGBEE\3ÔÂ27ºÅ\5ÔÂ25¿ÉÓÃ\node25¸Ä¶¯ÓÃÓÚÊµÑé ¸ #
#                            Ä¶¯Íê±Ï ³õ\Debug\Obj\hal_timer_32k.r51"           #
#                            "E:\ZIGBEE\3ÔÂ27ºÅ\5ÔÂ25¿ÉÓÃ\node25¸Ä¶¯ÓÃÓÚÊµÑé ¸ #
#                            Ä¶¯Íê±Ï ³õ\Debug\Obj\hal_uart.r51"                #
#                            "E:\ZIGBEE\3ÔÂ27ºÅ\5ÔÂ25¿ÉÓÃ\node25¸Ä¶¯ÓÃÓÚÊµÑé ¸ #
#                            Ä¶¯Íê±Ï ³õ\Debug\Obj\main.r51"                    #
#                            "E:\ZIGBEE\3ÔÂ27ºÅ\5ÔÂ25¿ÉÓÃ\node25¸Ä¶¯ÓÃÓÚÊµÑé ¸ #
#                            Ä¶¯Íê±Ï ³õ\Debug\Obj\util.r51"                    #
#                            -o                                                #
#                            "E:\ZIGBEE\3ÔÂ27ºÅ\5ÔÂ25¿ÉÓÃ\node25¸Ä¶¯ÓÃÓÚÊµÑé ¸ #
#                            Ä¶¯Íê±Ï ³õ\project2.d51"                          #
#                            -l                                                #
#                            "E:\ZIGBEE\3ÔÂ27ºÅ\5ÔÂ25¿ÉÓÃ\node25¸Ä¶¯ÓÃÓÚÊµÑé ¸ #
#                            Ä¶¯Íê±Ï ³õ\Debug\List\project2.map"               #
#                            -xmsn -ID:\IAR\8051\LIB\ -f                       #
#                            D:\IAR\8051\config\lnk51ew_cc2530b.xcl            #
#                            (-D_IDATA_END=0xFF -D_PDATA_START=0x1E00          #
#                            -D_PDATA_END=0x1EFF -D_IXDATA_START=0x0001        #
#                            -D_IXDATA_END=0x1EFF                              #
#                            -D_XDATA_START=_IXDATA_START                      #
#                            -D_XDATA_END=_IXDATA_END -D_CODE_START=0x0000     #
#                            -D_CODE_END=0x7FFF -D_FIRST_BANK_ADDR=0x10000     #
#                            -M(CODE)[(_CODEBANK_START+_FIRST_BANK_ADDR)-(_COD #
#                            EBANK_END+_FIRST_BANK_ADDR)]*_NR_OF_BANKS+0x10000 #
#                            =0x8000                                           #
#                            -ww69=i -D_NEAR_CODE_END=_CODE_END                #
#                            -D?REGISTER_BANK=0 -D_REGISTER_BANK_START=0       #
#                            -D?PBANK_NUMBER=0x1E -D?PBANK=0x93                #
#                            -D_BREG_START=0x00 -D?VB=0x20                     #
#                            -D_FAR_DATA_NR_OF_BANKS=0x0E                      #
#                            -D_FAR_DATA_START=0x010001                        #
#                            -D_FAR_DATA_END=0xFFFFFF                          #
#                            -D_FAR_CODE_START=_CODE_START                     #
#                            -D_FAR_CODE_END=_CODE_END -f lnk_base.xcl         #
#                            (-Z(BIT)BREG=_BREG_START -Z(BIT)BIT_N=0-7F        #
#                            -Z(DATA)REGISTERS+8=_REGISTER_BANK_START          #
#                            -Z(DATA)BDATA_Z,BDATA_N,BDATA_I=20-2F             #
#                            -Z(DATA)VREG+_NR_OF_VIRTUAL_REGISTERS=08-7F       #
#                            -Z(DATA)PSP,XSP=08-7F -Z(DATA)DOVERLAY=08-7F      #
#                            -Z(DATA)DATA_I,DATA_Z,DATA_N=08-7F                #
#                            -U(IDATA)0-7F=(DATA)0-7F                          #
#                            -Z(IDATA)IDATA_I,IDATA_Z,IDATA_N=08-_IDATA_END    #
#                            -Z(IDATA)ISTACK+_IDATA_STACK_SIZE#08-_IDATA_END   #
#                            -Z(IDATA)IOVERLAY=08-FF -Z(CODE)INTVEC=0          #
#                            -Z(CODE)CSTART=_CODE_START-_CODE_END              #
#                            -Z(CODE)BIT_ID,BDATA_ID,DATA_ID,IDATA_ID,IXDATA_I #
#                            D,PDATA_ID,XDATA_ID=_CODE_START-_CODE_END         #
#                            -Z(CODE)HUGE_ID=_FAR_CODE_START-_FAR_CODE_END     #
#                            -Z(CODE)BANK_RELAYS,RCODE,DIFUNCT,CODE_C,CODE_N,N #
#                            EAR_CODE=_CODE_START-_CODE_END                    #
#                            -P(CODE)BANKED_CODE=_CODE_START-_CODE_END,[(_CODE #
#                            BANK_START+_FIRST_BANK_ADDR)-(_CODEBANK_END+_FIRS #
#                            T_BANK_ADDR)]*_NR_OF_BANKS+10000                  #
#                            -P(CODE)FAR_CODE_C,FAR_CODE_N,FAR_CODE=[_FAR_CODE #
#                            _START-_FAR_CODE_END]/10000                       #
#                            -P(CODE)HUGE_CODE_C=_FAR_CODE_START-_FAR_CODE_END #
#                            -Z(CODE)CHECKSUM#_CODE_END                        #
#                            -Z(XDATA)EXT_STACK+_EXTENDED_STACK_SIZE=_EXTENDED #
#                            _STACK_START                                      #
#                            -Z(XDATA)PSTACK+_PDATA_STACK_SIZE=_PDATA_START-_P #
#                            DATA_END                                          #
#                            -Z(XDATA)XSTACK+_XDATA_STACK_SIZE=_XDATA_START-_X #
#                            DATA_END                                          #
#                            -Z(XDATA)PDATA_Z,PDATA_I=_PDATA_START-_PDATA_END  #
#                            -P(XDATA)PDATA_N=_PDATA_START-_PDATA_END          #
#                            -Z(XDATA)IXDATA_Z,IXDATA_I=_IXDATA_START-_IXDATA_ #
#                            END                                               #
#                            -P(XDATA)IXDATA_N=_IXDATA_START-_IXDATA_END       #
#                            -Z(XDATA)XDATA_Z,XDATA_I=_XDATA_START-_XDATA_END  #
#                            -P(XDATA)XDATA_N=_XDATA_START-_XDATA_END          #
#                            -Z(XDATA)XDATA_HEAP+_XDATA_HEAP_SIZE=_XDATA_START #
#                            -_XDATA_END                                       #
#                            -Z(CONST)XDATA_ROM_C=_XDATA_START-_XDATA_END      #
#                            -Z(XDATA)FAR_Z=[_FAR_DATA_START-_FAR_DATA_END]/10 #
#                            000                                               #
#                            -Z(XDATA)FAR_I=[_FAR_DATA_START-_FAR_DATA_END]/10 #
#                            000                                               #
#                            -Z(CODE)FAR_ID=[_FAR_CODE_START-_FAR_CODE_END]/10 #
#                            000                                               #
#                            -Z(XDATA)FAR_HEAP+_FAR_HEAP_SIZE=[_FAR_DATA_START #
#                            -_FAR_DATA_END]/10000                             #
#                            -P(XDATA)FAR_N=[_FAR_DATA_START-_FAR_DATA_END]*_F #
#                            AR_DATA_NR_OF_BANKS+10000                         #
#                            -P(CONST)FAR_ROM_C=[_FAR_DATA_START-_FAR_DATA_END #
#                            ]*_FAR_DATA_NR_OF_BANKS+10000                     #
#                            -Z(XDATA)HUGE_Z,HUGE_I=_FAR_DATA_START-_FAR_DATA_ #
#                            END                                               #
#                            -P(XDATA)HUGE_N=_FAR_DATA_START-_FAR_DATA_END     #
#                            -Z(XDATA)HUGE_HEAP+_HUGE_HEAP_SIZE=_FAR_DATA_STAR #
#                            T-_FAR_DATA_END                                   #
#                            -Z(CONST)HUGE_ROM_C=_FAR_DATA_START-_FAR_DATA_END #
#                            -cx51) -D_BANK0_START=0x00000                     #
#                            -D_BANK0_END=0x07FFF -D_BANK1_START=0x18000       #
#                            -D_BANK1_END=0x1FFFF -D_BANK2_START=0x28000       #
#                            -D_BANK2_END=0x2FFFF -D_BANK3_START=0x38000       #
#                            -D_BANK3_END=0x3FFFF -D_BANK4_START=0x48000       #
#                            -D_BANK4_END=0x4FFFF -D_BANK5_START=0x58000       #
#                            -D_BANK5_END=0x5FFFF -D_BANK6_START=0x68000       #
#                            -D_BANK6_END=0x6FFFF -D_BANK7_START=0x78000       #
#                            -D_BANK7_END=0x7FFFF                              #
#                            -P(CODE)BANK0=_BANK0_START-_BANK0_END             #
#                            -P(CODE)BANK1=_BANK1_START-_BANK1_END             #
#                            -P(CODE)BANK2=_BANK2_START-_BANK2_END             #
#                            -P(CODE)BANK3=_BANK3_START-_BANK3_END             #
#                            -P(CODE)BANK4=_BANK4_START-_BANK4_END             #
#                            -P(CODE)BANK5=_BANK5_START-_BANK5_END             #
#                            -P(CODE)BANK6=_BANK6_START-_BANK6_END             #
#                            -P(CODE)BANK7=_BANK7_START-_BANK7_END             #
#                            -D_FLASH_LOCK_BITS_START=((_NR_OF_BANKS*_FIRST_BA #
#                            NK_ADDR)+0xFFF0)                                  #
#                            -D_FLASH_LOCK_BITS_END=((_NR_OF_BANKS*_FIRST_BANK #
#                            _ADDR)+0xFFFF)                                    #
#                            -Z(CODE)FLASH_LOCK_BITS=_FLASH_LOCK_BITS_START-_F #
#                            LASH_LOCK_BITS_END                                #
#                            -U(CODE)0x0000=(CODE)_FLASH_LOCK_BITS_START-_FLAS #
#                            H_LOCK_BITS_END)                                  #
#                            -D_NR_OF_VIRTUAL_REGISTERS=8                      #
#                            -e_medium_write=_formatted_write                  #
#                            -e_medium_read=_formatted_read -rt                #
#                            "-Ointel-extended=E:\ZIGBEE\3ÔÂ27ºÅ\5ÔÂ25¿ÉÓÃ\nod #
#                            e25¸Ä¶¯ÓÃÓÚÊµÑé ¸Ä¶¯Íê±Ï ³õ\project2.hex"         #
#                            -s __program_start                                #
#                            D:\IAR\8051\LIB\CLIB\cl-pli-nlxd-1e16x01.r51      #
#                            -D_IDATA_STACK_SIZE=0x40                          #
#                            -D_EXTENDED_STACK_START=0x00                      #
#                            -D_EXTENDED_STACK_SIZE=0x00                       #
#                            -D_PDATA_STACK_SIZE=0x80                          #
#                            -D_XDATA_STACK_SIZE=0x100                         #
#                            -D_XDATA_HEAP_SIZE=0xFF -D_FAR_HEAP_SIZE=0xFFF    #
#                            -D_HUGE_HEAP_SIZE=0xFFF                           #
#                                                                              #
#                           Copyright (C) 1987-2009 IAR Systems AB.            #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at : CODE      000000D3  Relocatable, from module : CSTARTUP




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  __calling_convention     = xdata_reentrant
  __code_model             = near
  __core                   = plain
  __data_model             = large
  __dptr_size              = 16
  __extended_stack         = disabled
  __location_for_constants = data
  __number_of_dptrs        = 1
  __rt_version             = 1



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _HUGE_HEAP_SIZE         00000FFF 
           _FAR_HEAP_SIZE          00000FFF 
           _XDATA_HEAP_SIZE        000000FF 
           _XDATA_STACK_SIZE       00000100 
           _PDATA_STACK_SIZE       00000080 
           _EXTENDED_STACK_SIZE    00000000 
           _EXTENDED_STACK_START   00000000 
           _IDATA_STACK_SIZE       00000040 
           _NR_OF_VIRTUAL_REGISTERS
                                   00000008 
           _FLASH_LOCK_BITS_END    0000FFFF 
           _FLASH_LOCK_BITS_START
                                   0000FFF0 
           _BANK7_END              0007FFFF 
           _BANK7_START            00078000 
           _BANK6_END              0006FFFF 
           _BANK6_START            00068000 
           _BANK5_END              0005FFFF 
           _BANK5_START            00058000 
           _BANK4_END              0004FFFF 
           _BANK4_START            00048000 
           _BANK3_END              0003FFFF 
           _BANK3_START            00038000 
           _BANK2_END              0002FFFF 
           _BANK2_START            00028000 
           _BANK1_END              0001FFFF 
           _BANK1_START            00018000 
           _BANK0_END              00007FFF 
           _BANK0_START            00000000 
           _FAR_CODE_END           00007FFF 
           _FAR_CODE_START         00000000 
           _FAR_DATA_END           00FFFFFF 
           _FAR_DATA_START         00010001 
           _FAR_DATA_NR_OF_BANKS   0000000E 
           ?VB                     00000020        ?FUNC_ENTER_XDATA (?FUNC_ENTER_XDATA)
                                                   ?FUNC_LEAVE_XDATA (?FUNC_LEAVE_XDATA)
                                                   ?INTERRUPT_ENTER_XSP (?INTERRUPT_ENTER_XSP)
                                                   ?INTERRUPT_LEAVE_XSP (?INTERRUPT_LEAVE_XSP)
           _BREG_START             00000000 
           ?PBANK                  00000093 
           ?PBANK_NUMBER           0000001E 
           _REGISTER_BANK_START    00000000 
           ?REGISTER_BANK          00000000        Segment part 6 (CSTARTUP)
           _NEAR_CODE_END          00007FFF 
           _FIRST_BANK_ADDR        00010000 
           _CODE_END               00007FFF 
           _CODE_START             00000000 
           _XDATA_END              00001EFF 
           _XDATA_START            00000001 
           _IXDATA_END             00001EFF 
           _IXDATA_START           00000001 
           _PDATA_END              00001EFF 
           _PDATA_START            00001E00 
           _IDATA_END              000000FF 
           _CODEBANK_START         00000000 
           _CODEBANK_END           00000000 
           _NR_OF_BANKS            00000000 
    *************************************************************************

  FILE NAME : E:\ZIGBEE\3ÔÂ27ºÅ\5ÔÂ25¿ÉÓÃ\node25¸Ä¶¯ÓÃÓÚÊµÑé ¸Ä¶¯Íê±Ï ³õ\Debug\Obj\basic_rf.r51
    *************************************************************************

  FILE NAME : E:\ZIGBEE\3ÔÂ27ºÅ\5ÔÂ25¿ÉÓÃ\node25¸Ä¶¯ÓÃÓÚÊµÑé ¸Ä¶¯Íê±Ï ³õ\Debug\Obj\basic_rf_security.r51
    *************************************************************************

  FILE NAME : E:\ZIGBEE\3ÔÂ27ºÅ\5ÔÂ25¿ÉÓÃ\node25¸Ä¶¯ÓÃÓÚÊµÑé ¸Ä¶¯Íê±Ï ³õ\Debug\Obj\clock.r51
    *************************************************************************

  FILE NAME : E:\ZIGBEE\3ÔÂ27ºÅ\5ÔÂ25¿ÉÓÃ\node25¸Ä¶¯ÓÃÓÚÊµÑé ¸Ä¶¯Íê±Ï ³õ\Debug\Obj\hal_assert.r51
    *************************************************************************

  FILE NAME : E:\ZIGBEE\3ÔÂ27ºÅ\5ÔÂ25¿ÉÓÃ\node25¸Ä¶¯ÓÃÓÚÊµÑé ¸Ä¶¯Íê±Ï ³õ\Debug\Obj\hal_board.r51
    *************************************************************************

  FILE NAME : E:\ZIGBEE\3ÔÂ27ºÅ\5ÔÂ25¿ÉÓÃ\node25¸Ä¶¯ÓÃÓÚÊµÑé ¸Ä¶¯Íê±Ï ³õ\Debug\Obj\hal_int.r51
    *************************************************************************

  FILE NAME : E:\ZIGBEE\3ÔÂ27ºÅ\5ÔÂ25¿ÉÓÃ\node25¸Ä¶¯ÓÃÓÚÊµÑé ¸Ä¶¯Íê±Ï ³õ\Debug\Obj\hal_led.r51
    *************************************************************************

  FILE NAME : E:\ZIGBEE\3ÔÂ27ºÅ\5ÔÂ25¿ÉÓÃ\node25¸Ä¶¯ÓÃÓÚÊµÑé ¸Ä¶¯Íê±Ï ³õ\Debug\Obj\hal_mcu.r51
    *************************************************************************

  FILE NAME : E:\ZIGBEE\3ÔÂ27ºÅ\5ÔÂ25¿ÉÓÃ\node25¸Ä¶¯ÓÃÓÚÊµÑé ¸Ä¶¯Íê±Ï ³õ\Debug\Obj\hal_rf.r51
    *************************************************************************

  FILE NAME : E:\ZIGBEE\3ÔÂ27ºÅ\5ÔÂ25¿ÉÓÃ\node25¸Ä¶¯ÓÃÓÚÊµÑé ¸Ä¶¯Íê±Ï ³õ\Debug\Obj\hal_rf_security.r51
    *************************************************************************

  FILE NAME : E:\ZIGBEE\3ÔÂ27ºÅ\5ÔÂ25¿ÉÓÃ\node25¸Ä¶¯ÓÃÓÚÊµÑé ¸Ä¶¯Íê±Ï ³õ\Debug\Obj\hal_rf_util.r51
    *************************************************************************

  FILE NAME : E:\ZIGBEE\3ÔÂ27ºÅ\5ÔÂ25¿ÉÓÃ\node25¸Ä¶¯ÓÃÓÚÊµÑé ¸Ä¶¯Íê±Ï ³õ\Debug\Obj\hal_timer_32k.r51
    *************************************************************************

  FILE NAME : E:\ZIGBEE\3ÔÂ27ºÅ\5ÔÂ25¿ÉÓÃ\node25¸Ä¶¯ÓÃÓÚÊµÑé ¸Ä¶¯Íê±Ï ³õ\Debug\Obj\hal_uart.r51
    *************************************************************************

  FILE NAME : E:\ZIGBEE\3ÔÂ27ºÅ\5ÔÂ25¿ÉÓÃ\node25¸Ä¶¯ÓÃÓÚÊµÑé ¸Ä¶¯Íê±Ï ³õ\Debug\Obj\main.r51
  PROGRAM MODULE, NAME : main

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000080 - 00000080 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   halBoardInit
                                                   halLedClear
                                                   halLedSet
                                                   halLedToggle
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P0                   00000080 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000086 - 00000086 (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U0CSR                   00000086 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000088 - 00000088 (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   UART0_ISR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCON                 00000088 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000008F - 0000008F (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   halBoardInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0INP                   0000008F 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000090 - 00000090 (0x1 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   halBoardInit
                                                   halLedClear
                                                   halLedSet
                                                   halLedToggle
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P1                   00000090 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000091 - 00000091 (0x1 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   basicRfSendPacket
                                                   halRfWriteTxBuf
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFIRQF1                 00000091 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000009A - 0000009A (0x1 bytes), align: 0
  Segment part 7. ROOT.       Intra module refs:   halRfDisableRxInterrupt
                                                   halRfEnableRxInterrupt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IEN2                    0000009A 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000009B - 0000009B (0x1 bytes), align: 0
  Segment part 8. ROOT.       Intra module refs:   rfIsr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           S1CON                   0000009B 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000009D - 0000009D (0x1 bytes), align: 0
  Segment part 9. ROOT.       Intra module refs:   clockSetMainSrc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SLEEPSTA                0000009D 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000009E - 0000009E (0x1 bytes), align: 0
  Segment part 10. ROOT.      Intra module refs:   clockSelect32k
                                                   clockSetMainSrc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLKCONSTA               0000009E 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A8 - 000000A8 (0x1 bytes), align: 0
  Segment part 11. ROOT.      Intra module refs:   UART0_ISR
                                                   basicRfInit
                                                   basicRfRxFrmDoneIsr
                                                   halBoardInit
                                                   main
                                                   rfIsr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN0                 000000A8 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BE - 000000BE (0x1 bytes), align: 0
  Segment part 12. ROOT.      Intra module refs:   clockSetMainSrc
                                                   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SLEEPCMD                000000BE 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C1 - 000000C1 (0x1 bytes), align: 0
  Segment part 13. ROOT.      Intra module refs:   UART0_ISR
                                                   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U0DBUF                  000000C1 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C2 - 000000C2 (0x1 bytes), align: 0
  Segment part 14. ROOT.      Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U0BAUD                  000000C2 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C5 - 000000C5 (0x1 bytes), align: 0
  Segment part 15. ROOT.      Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U0GCR                   000000C5 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C6 - 000000C6 (0x1 bytes), align: 0
  Segment part 16. ROOT.      Intra module refs:   clockSelect32k
                                                   clockSetMainSrc
                                                   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLKCONCMD               000000C6 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D9 - 000000D9 (0x1 bytes), align: 0
  Segment part 17. ROOT.      Intra module refs:   halRfReadRxBuf
                                                   halRfWriteTxBuf
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFD                     000000D9 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E1 - 000000E1 (0x1 bytes), align: 0
  Segment part 18. ROOT.      Intra module refs:   basicRfSendPacket
                                                   halRfWriteTxBuf
                                                   packetSend
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFST                    000000E1 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E8 - 000000E8 (0x1 bytes), align: 0
  Segment part 19. ROOT.      Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IRCON2               000000E8 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E9 - 000000E9 (0x1 bytes), align: 0
  Segment part 20. ROOT.      Intra module refs:   rfIsr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFIRQF0                 000000E9 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F1 - 000000F1 (0x1 bytes), align: 0
  Segment part 21. ROOT.      Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PERCFG                  000000F1 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F3 - 000000F3 (0x1 bytes), align: 0
  Segment part 22. ROOT.      Intra module refs:   halBoardInit
                                                   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0SEL                   000000F3 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F5 - 000000F5 (0x1 bytes), align: 0
  Segment part 23. ROOT.      Intra module refs:   halBoardInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2SEL                   000000F5 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F7 - 000000F7 (0x1 bytes), align: 0
  Segment part 24. ROOT.      Intra module refs:   halBoardInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2INP                   000000F7 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000FD - 000000FD (0x1 bytes), align: 0
  Segment part 25. ROOT.      Intra module refs:   halBoardInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0DIR                   000000FD 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000FE - 000000FE (0x1 bytes), align: 0
  Segment part 26. ROOT.      Intra module refs:   halBoardInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1DIR                   000000FE 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000FF - 000000FF (0x1 bytes), align: 0
  Segment part 27. ROOT.      Intra module refs:   halBoardInit
                                                   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2DIR                   000000FF 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000101 - 00000388 (0x288 bytes), align: 0
  Segment part 36.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Data                    00000101 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000389 - 00000389 (0x1 bytes), align: 0
  Segment part 37.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           count                   00000389 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000038A - 0000038A (0x1 bytes), align: 0
  Segment part 38.            Intra module refs:   ?Subroutine8
                                                   UART0_ISR
                                                   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           temp                    0000038A 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000038B - 0000038C (0x2 bytes), align: 0
  Segment part 39.            Intra module refs:   ?Subroutine8
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Order1                  0000038B 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 000004AA - 000004AA (0x1 bytes), align: 0
  Segment part 40.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Choose                  000004AA 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000038D - 0000038D (0x1 bytes), align: 0
  Segment part 42.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Loop                    0000038D 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000038E - 000003A8 (0x1b bytes), align: 0
  Segment part 43.            Intra module refs:   clearBuff
                                                   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pRxData                 0000038E 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000307 - 00000333 (0x2d bytes), align: 0
  Segment part 57.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           clearBuff               00000307 
               XSTACK = 00000006 ( 00000000 )
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000334 - 00000351 (0x1e bytes), align: 0
  Segment part 58.            Intra module refs:   ?Subroutine8
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           packetSend              00000334 
               calls direct
               XSTACK = 00000006 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000352 - 00000564 (0x213 bytes), align: 0
  Segment part 59.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    00000352        ?call_main (?cmain)
               calls direct
               XSTACK = 00000000 ( 00000008 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000565 - 00000577 (0x13 bytes), align: 0
  Segment part 60.            Intra module refs:   main
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            00000565 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000578 - 0000057A (0x3 bytes), align: 0
  Segment part 61.            Intra module refs:   main
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            00000578 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000057B - 00000582 (0x8 bytes), align: 0
  Segment part 62.            Intra module refs:   ?Subroutine3
                                                   ?Subroutine5
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           0000057B 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000583 - 00000593 (0x11 bytes), align: 0
  Segment part 63.            Intra module refs:   main
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            00000583 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000594 - 00000598 (0x5 bytes), align: 0
  Segment part 64.            Intra module refs:   main
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            00000594 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000599 - 0000059A (0x2 bytes), align: 0
  Segment part 65.            Intra module refs:   main
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00000599 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000059B - 000005A2 (0x8 bytes), align: 0
  Segment part 66.            Intra module refs:   ?Subroutine2
                                                   main
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000005A3 - 000005C6 (0x24 bytes), align: 0
  Segment part 67.            Intra module refs:   UART0_ISR::??INTVEC 19
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART0_ISR               000005A3 
               interrupt function
               calls direct
               ISTACK = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000005C7 - 000005CB (0x5 bytes), align: 0
  Segment part 68.            Intra module refs:   T1_ISR
                                                   UART0_ISR
                                                   rfIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine16           000005C7 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 000004AB - 000004B6 (0xc bytes), align: 0
  Segment part 44.            Intra module refs:   basicRfInit
                                                   basicRfRxFrmDoneIsr
                                                   main
           LOCAL                   ADDRESS         
           =====                   =======         
           rxi                     000004AB 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000003A9 - 000003AF (0x7 bytes), align: 0
  Segment part 46.            Intra module refs:   basicRfInit
                                                   basicRfRxFrmDoneIsr
                                                   basicRfSendPacket
                                                   packetSend
           LOCAL                   ADDRESS         
           =====                   =======         
           txState                 000003A9 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000003B0 - 000003B1 (0x2 bytes), align: 0
  Segment part 47.            Intra module refs:   ?Subroutine10
                                                   ?Subroutine6
                                                   basicRfInit
           LOCAL                   ADDRESS         
           =====                   =======         
           pConfig                 000003B0 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000003B2 - 00000424 (0x73 bytes), align: 0
  Segment part 48.            Intra module refs:   basicRfSendPacket
           LOCAL                   ADDRESS         
           =====                   =======         
           txMpdu                  000003B2 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000425 - 000004A4 (0x80 bytes), align: 0
  Segment part 49.            Intra module refs:   ?Subroutine9
                                                   basicRfRxFrmDoneIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxMpdu                  00000425 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000005CC - 000006AA (0xdf bytes), align: 0
  Segment part 69.            Intra module refs:   basicRfInit
           LOCAL                   ADDRESS         
           =====                   =======         
           basicRfRxFrmDoneIsr     000005CC 
               calls direct, is indirectly called
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000006AB - 000006B8 (0xe bytes), align: 0
  Segment part 70.            Intra module refs:   basicRfRxFrmDoneIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            000006AB 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000006B9 - 00000750 (0x98 bytes), align: 0
  Segment part 71.            Intra module refs:   ?Subroutine4
                                                   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           basicRfInit             000006B9 
               calls direct
               XSTACK = 00000006 ( 0000000B )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000751 - 0000083A (0xea bytes), align: 0
  Segment part 72.            Intra module refs:   packetSend
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           basicRfSendPacket       00000751 
               calls direct
               XSTACK = 00000000 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000083B - 00000847 (0xd bytes), align: 0
  Segment part 73.            Intra module refs:   basicRfSendPacket
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            0000083B 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000848 - 0000084A (0x3 bytes), align: 0
  Segment part 74.            Intra module refs:   basicRfInit
                                                   basicRfSendPacket
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00000848 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000084B - 00000850 (0x6 bytes), align: 0
  Segment part 75.            Intra module refs:   ?Subroutine0
                                                   ?Subroutine1
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           0000084B 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000851 - 00000857 (0x7 bytes), align: 0
  Segment part 76.            Intra module refs:   basicRfInit
                                                   basicRfSendPacket
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00000851 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000858 - 0000085F (0x8 bytes), align: 0
  Segment part 77.            Intra module refs:   ?Subroutine0
                                                   ?Subroutine1
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           00000858 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000860 - 00000893 (0x34 bytes), align: 0
  Segment part 78.            Intra module refs:   halBoardInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           clockSetMainSrc         00000860 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000894 - 000008B9 (0x26 bytes), align: 0
  Segment part 79.            Intra module refs:   halBoardInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           clockSelect32k          00000894 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000008BA - 000008D6 (0x1d bytes), align: 0
  Segment part 80.            Intra module refs:   halBoardInit
                                                   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halAssertHandler        000008BA 
               calls direct
               XSTACK = 00000006 ( 00000000 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000008D7 - 0000091F (0x49 bytes), align: 0
  Segment part 81.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halBoardInit            000008D7 
               calls direct
               XSTACK = 00000006 ( 00000000 )
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000004A5 - 000004A5 (0x1 bytes), align: 0
  Segment part 50.            Intra module refs:   halLedClear
                                                   halLedSet
                                                   halLedToggle
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           led4State               000004A5 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000920 - 00000949 (0x2a bytes), align: 0
  Segment part 82.            Intra module refs:   ?Subroutine3
                                                   UART0_ISR
                                                   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halLedSet               00000920 
               XSTACK = 00000006 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000094A - 00000970 (0x27 bytes), align: 0
  Segment part 83.            Intra module refs:   ?Subroutine5
                                                   UART0_ISR
                                                   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halLedClear             0000094A 
               XSTACK = 00000006 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000971 - 00000975 (0x5 bytes), align: 0
  Segment part 84.            Intra module refs:   basicRfRxFrmDoneIsr
                                                   clearBuff
                                                   halLedClear
                                                   halLedSet
                                                   halLedToggle
                                                   halRfDisableRxInterrupt
                                                   halRfEnableRxInterrupt
                                                   halRfReadRxBuf
                                                   packetSend
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine15           00000971 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000976 - 000009AA (0x35 bytes), align: 0
  Segment part 85.            Intra module refs:   halAssertHandler
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halLedToggle            00000976 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000009AB - 000009DB (0x31 bytes), align: 0
  Segment part 86.            Intra module refs:   basicRfSendPacket
                                                   halMcuWaitMs
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halMcuWaitUs            000009AB 
               XSTACK = 0000000A ( 00000000 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000009DC - 00000A08 (0x2d bytes), align: 0
  Segment part 87.            Intra module refs:   ?Subroutine13
                                                   UART0_ISR
                                                   halAssertHandler
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halMcuWaitMs            000009DC 
               calls direct
               XSTACK = 00000006 ( 00000008 )
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000004A6 - 000004A7 (0x2 bytes), align: 0
  Segment part 51.            Intra module refs:   basicRfInit
                                                   rfIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           pfISR                   000004A6 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 000004B7 - 000004B7 (0x1 bytes), align: 0
  Segment part 52.            Intra module refs:   main
           LOCAL                   ADDRESS         
           =====                   =======         
           rssiOffset              000004B7 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 000004B8 - 000004BB (0x4 bytes), align: 0
  Segment part 55.            Intra module refs:   basicRfInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_0            000004B8 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000A09 - 00000A31 (0x29 bytes), align: 0
  Segment part 88.            Intra module refs:   basicRfSendPacket
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halRfWriteTxBuf         00000A09 
               XSTACK = 0000000A ( 00000009 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000A32 - 00000A4A (0x19 bytes), align: 0
  Segment part 89.            Intra module refs:   ?Subroutine9
                                                   basicRfRxFrmDoneIsr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halRfReadRxBuf          00000A32 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000A4B - 00000A5B (0x11 bytes), align: 0
  Segment part 90.            Intra module refs:   basicRfRxFrmDoneIsr
                                                   basicRfSendPacket
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halRfDisableRxInterrupt
                                   00000A4B 
               XSTACK = 0000000A ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000A5C - 00000A6C (0x11 bytes), align: 0
  Segment part 91.            Intra module refs:   basicRfInit
                                                   basicRfRxFrmDoneIsr
                                                   basicRfSendPacket
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halRfEnableRxInterrupt
                                   00000A5C 
               XSTACK = 0000000B ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000A6D - 00000AA2 (0x36 bytes), align: 0
  Segment part 92.            Intra module refs:   rfIsr::??INTVEC 131
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           rfIsr                   00000A6D 
               interrupt function
               ISTACK = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000AA3 - 00000AA6 (0x4 bytes), align: 0
  Segment part 93.            Intra module refs:   T1_ISR
                                                   basicRfInit
                                                   rfIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            00000AA3 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000AA7 - 00000AAA (0x4 bytes), align: 0
  Segment part 94.            Intra module refs:   ?Subroutine6
                                                   ?Subroutine7
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           00000AA7 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000AAB - 00000AB3 (0x9 bytes), align: 0
  Segment part 95.            Intra module refs:   ?Subroutine10
                                                   ?Subroutine11
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           00000AAB 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000004A8 - 000004A9 (0x2 bytes), align: 0
  Segment part 54.            Intra module refs:   T1_ISR
           LOCAL                   ADDRESS         
           =====                   =======         
           fptr                    000004A8 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000AB4 - 00000AD0 (0x1d bytes), align: 0
  Segment part 96.            Intra module refs:   T1_ISR::??INTVEC 75
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1_ISR                  00000AB4 
               interrupt function
               ISTACK = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000015 (0x16 bytes), align: 0
  Segment part 28. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART0_ISR::??INTVEC 19
                                   00000013 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000004D (0x4e bytes), align: 0
  Segment part 29. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1_ISR::??INTVEC 75     0000004B 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000085 (0x86 bytes), align: 0
  Segment part 30. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           rfIsr::??INTVEC 131     00000083 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000000E5 - 000000E5 (0x1 bytes), align: 0
  Segment part 41.            Intra module refs:   Choose
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000000E6 - 000000F1 (0xc bytes), align: 0
  Segment part 45.            Intra module refs:   rxi
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000000F2 - 000000F2 (0x1 bytes), align: 0
  Segment part 53.            Intra module refs:   rssiOffset
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000000F3 - 000000F6 (0x4 bytes), align: 0
  Segment part 56.            Intra module refs:   __Constant_0

    *************************************************************************

  FILE NAME : E:\ZIGBEE\3ÔÂ27ºÅ\5ÔÂ25¿ÉÓÃ\node25¸Ä¶¯ÓÃÓÚÊµÑé ¸Ä¶¯Íê±Ï ³õ\Debug\Obj\util.r51
    *************************************************************************

  FILE NAME : D:\IAR\8051\LIB\CLIB\cl-pli-nlxd-1e16x01.r51
  LIBRARY MODULE, NAME : ?cexit

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 00000086 - 0000008A (0x5 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           exit                    00000086        ?call_main (?cmain)
           ?C_EXIT                 00000086 
           ?ROM_MONITOR_NOPS       00000086 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?cmain

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 0000008B, align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cmain                  0000008B        Segment part 12 (CSTARTUP)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 0000008B - 00000093 (0x9 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init_call   0000008B        __low_level_init (?low_level_init)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000094 - 000000A3 (0x10 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_XDATA_Z          00000094        Data (main)
                                                   Loop (main)
                                                   Order1 (main)
                                                   count (main)
                                                   fptr (main)
                                                   led4State (main)
                                                   pConfig (main)
                                                   pRxData (main)
                                                   pfISR (main)
                                                   rxMpdu (main)
                                                   temp (main)
                                                   txMpdu (main)
                                                   txState (main)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000A4 - 000000CC (0x29 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_XDATA_I          000000A4        Choose (main)
                                                   __Constant_0 (main)
                                                   rssiOffset (main)
                                                   rxi (main)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000CD, align: 0
  Segment part 32.            Intra module refs:   __low_level_init_call
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000CD - 000000D2 (0x6 bytes), align: 0
  Segment part 33.            Intra module refs:   ?cmain
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?call_main              000000CD 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : CSTARTUP

  SEGMENTS IN THE MODULE
  ======================
REGISTERS
  Relative segment, address: DATA 00000000, align: 0
  Segment part 0.             Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?REGISTERS              00000000 
    -------------------------------------------------------------------------
ISTACK
  Relative segment, address: IDATA 000000C0, align: 0
  Segment part 1.             Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ISTACK_START           000000C0 
    -------------------------------------------------------------------------
XSTACK
  Relative segment, address: XDATA 00000001, align: 0
  Segment part 3.             Intra module refs:   ?RESET_XSP
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTACK_START           00000001 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000002 (0x3 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000D3 - 000000D8 (0x6 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __program_start         000000D3        Absolute parts (?ABS_ENTRY_MOD)
           ?RESET_SP               000000D6 
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000D9 - 000000DE (0x6 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?RESET_XSP              000000D9        ?XSP (VIRTUAL_REGISTERS)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000DF - 000000E1 (0x3 bytes), align: 0
  Segment part 12.            Intra module refs:   Absolute parts

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : VIRTUAL_REGISTERS

  SEGMENTS IN THE MODULE
  ======================
BREG
  Relative segment, address: BIT 00000020.0 - 00000020.7 (0x8 bits), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?B0                     00000020.0      Absolute parts (CSTARTUP)
    -------------------------------------------------------------------------
VREG
  Relative segment, address: DATA 00000008, align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V0                     00000008        ?FUNC_ENTER_XDATA (?FUNC_ENTER_XDATA)
                                                   ?FUNC_LEAVE_XDATA (?FUNC_LEAVE_XDATA)
                                                   ?INTERRUPT_ENTER_XSP (?INTERRUPT_ENTER_XSP)
                                                   ?INTERRUPT_LEAVE_XSP (?INTERRUPT_LEAVE_XSP)
                                                   basicRfInit (main)
                                                   basicRfSendPacket (main)
                                                   halRfWriteTxBuf (main)
                                                   main (main)
                                                   memcpy (?memcpy)
    -------------------------------------------------------------------------
XSP
  Relative segment, address: DATA 00000010 - 00000011 (0x2 bytes), align: 0
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSP                    00000010        ?ADD_XSTACK_DISP0_8 (?ADD_XSTACK_DISP8)
                                                   ?ALLOC_XSTACK8 (?ALLOC_XSTACK8)
                                                   ?DEALLOC_XSTACK8 (?DEALLOC_XSTACK8)
                                                   ?FUNC_ENTER_XDATA (?FUNC_ENTER_XDATA)
                                                   ?FUNC_LEAVE_XDATA (?FUNC_LEAVE_XDATA)
                                                   ?INTERRUPT_ENTER_XSP (?INTERRUPT_ENTER_XSP)
                                                   ?INTERRUPT_LEAVE_XSP (?INTERRUPT_LEAVE_XSP)
                                                   ?RESET_XSP (CSTARTUP)
                                                   ?Subroutine4 (main)
                                                   ?XSTACK_DISP0_8 (?XSTACK_DISP8)
                                                   main (main)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_MOV_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000000F7 - 00000105 (0xf bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MOV_X                000000F7        basicRfInit (main)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_MOV_TO_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000106 - 00000114 (0xf bytes), align: 0
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MOV_TO_X             00000106        basicRfInit (main)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?MOVE_LONG8_XDATA_IDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000115 - 00000121 (0xd bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?MOVE_LONG8_XDATA_IDATA
                                   00000115        ?PUSH_XSTACK_I (?PUSH_XSTACK_I)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?ALLOC_XSTACK8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000122 - 00000137 (0x16 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ALLOC_XSTACK8          00000122        main (main)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DEALLOC_XSTACK8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000138 - 00000151 (0x1a bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DEALLOC_XSTACK8        00000138        main (main)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?ADD_XSTACK_DISP8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000152 - 0000016C (0x1b bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ADD_XSTACK_DISP0_8     00000152        ?PUSH_XSTACK_I (?PUSH_XSTACK_I)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?XSTACK_DISP8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000016D - 00000176 (0xa bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTACK_DISP0_8         0000016D        main (main)
                                                   memcpy (?memcpy)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?CALL_IND

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000177 - 00000178 (0x2 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?CALL_IND               00000177        T1_ISR (main)
                                                   rfIsr (main)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FUNC_ENTER_XDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000179 - 000001D8 (0x60 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FUNC_ENTER_XDATA       00000179        basicRfInit (main)
                                                   basicRfSendPacket (main)
                                                   halMcuWaitMs (main)
                                                   halRfWriteTxBuf (main)
                                                   memcpy (?memcpy)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FUNC_LEAVE_XDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000001D9 - 00000210 (0x38 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FUNC_LEAVE_XDATA       000001D9        basicRfInit (main)
                                                   basicRfSendPacket (main)
                                                   halMcuWaitMs (main)
                                                   halRfWriteTxBuf (main)
                                                   memcpy (?memcpy)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?INTERRUPT_ENTER_XSP

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000211 - 0000026F (0x5f bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?INTERRUPT_ENTER_XSP    00000211        T1_ISR (main)
                                                   UART0_ISR (main)
                                                   rfIsr (main)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?INTERRUPT_LEAVE_XSP

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000270 - 000002BF (0x50 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?INTERRUPT_LEAVE_XSP    00000270        ?Subroutine16 (main)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?PUSH_XSTACK_I

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000002C0 - 000002C3 (0x4 bytes), align: 0
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I_TWO      000002C0        main (main)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000002C4 - 000002D0 (0xd bytes), align: 0
  Segment part 4.             Intra module refs:   ?PUSH_XSTACK_I_TWO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I          000002C4 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UC_SWITCH_DENSE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000002D1 - 000002D6 (0x6 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UC_SWITCH_DENSE        000002D1        halLedClear (main)
                                                   halLedSet (main)
                                                   halLedToggle (main)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000002D7 - 00000305 (0x2f bytes), align: 0
  Segment part 2.             Intra module refs:   ?UC_SWITCH_DENSE
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000306 - 00000306 (0x1 bytes), align: 0
  Segment part 4.             Intra module refs:   ?UC_SWITCH_DENSE

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memcpy

  SEGMENTS IN THE MODULE
  ======================
NEAR_CODE
  Relative segment, address: CODE 00000AD1 - 00000B18 (0x48 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memcpy                  00000AD1        main (main)
               XSTACK = 00000002 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?low_level_init

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 000000E2 - 000000E4 (0x3 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init        000000E2        __low_level_init_call (?cmain)




                ****************************************
                *                                      *
                *            MODULE SUMMARY            *
                *                                      *
                ****************************************

Module                    CODE      DATA      XDATA  IDATA    BIT
------                    ----      ----      -----  -----    ---
                         (Rel)  (Rel)  (Abs)  (Rel)  (Rel)  (Rel)
?ADD_XSTACK_DISP8           27
?ALLOC_XSTACK8              22
?CALL_IND                    2
?DEALLOC_XSTACK8            26
?FUNC_ENTER_XDATA           96
?FUNC_LEAVE_XDATA           56
?INTERRUPT_ENTER_XSP        95
?INTERRUPT_LEAVE_XSP        80
?L_MOV_TO_X                 15
?L_MOV_X                    15
?MOVE_LONG8_XDATA_IDATA     13
?PUSH_XSTACK_I              17
?UC_SWITCH_DENSE            54
?XSTACK_DISP8               10
?cexit                       5
?cmain                      72
?low_level_init              3
?memcpy                     72
CSTARTUP                    15
  + common                   3
VIRTUAL_REGISTERS                   2                           8
main                     2 012            27    955
  + common                 134
N/A (command line)                 16           256     64
N/A (alignment)
----------               -----     --     --  -----     --      -
Total:                   2 707     18     27  1 211     64      8
  + common                 134


                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
INTVEC               CODE          00000000 - 00000085          86   com    0
CSTART               CODE          00000086 - 000000E4          5F   rel    0
DATA_ID              CODE               000000E5                     dse    0
BDATA_ID             CODE               000000E5                     dse    0
BIT_ID               CODE               000000E5                     dse    0
IXDATA_ID            CODE               000000E5                     dse    0
PDATA_ID             CODE               000000E5                     dse    0
IDATA_ID             CODE               000000E5                     dse    0
XDATA_ID             CODE          000000E5 - 000000F6          12   rel    0
BANK_RELAYS          CODE               000000F7                     dse    0
RCODE                CODE          000000F7 - 00000306         210   rel    0
DIFUNCT              CODE               00000307                     dse    0
CODE_C               CODE               00000307                     dse    0
CODE_N               CODE               00000307                     dse    0
NEAR_CODE            CODE          00000307 - 00000B18         812   rel    0
REGISTERS            DATA          00000000 - 00000007           8   rel    0
VREG                 DATA          00000008 - 0000000F           8   rel    0
PSP                  DATA               00000010                     dse    0
XSP                  DATA          00000010 - 00000011           2   rel    0
BREG                 BIT        00000020.0  -  00000020.7        8   rel    0
SFR_AN               DATA          00000080 - 00000080           1   rel    0
                     DATA          00000086 - 00000086           1 
                     DATA          00000088 - 00000088           1 
                     DATA          0000008F - 00000091           3 
                     DATA          0000009A - 0000009B           2 
                     DATA          0000009D - 0000009E           2 
                     DATA          000000A8 - 000000A8           1 
                     DATA          000000BE - 000000BE           1 
                     DATA          000000C1 - 000000C2           2 
                     DATA          000000C5 - 000000C6           2 
                     DATA          000000D9 - 000000D9           1 
                     DATA          000000E1 - 000000E1           1 
                     DATA          000000E8 - 000000E9           2 
                     DATA          000000F1 - 000000F1           1 
                     DATA          000000F3 - 000000F3           1 
                     DATA          000000F5 - 000000F5           1 
                     DATA          000000F7 - 000000F7           1 
                     DATA          000000FD - 000000FF           3 
XSTACK               XDATA         00000001 - 00000100         100   rel    0
XDATA_Z              XDATA         00000101 - 000004A9         3A9   rel    0
XDATA_I              XDATA         000004AA - 000004BB          12   rel    0
ISTACK               IDATA         000000C0 - 000000FF          40   rel    0

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 2 841 bytes of CODE  memory
    18 bytes of DATA  memory (+ 27 absolute )
 1 211 bytes of XDATA memory
    64 bytes of IDATA memory
     8 bits  of BIT   memory

Errors: none
Warnings: none

